@using Cinema.IVH7B4.WebUI.Models
@model Cinema.IVH7B4.WebUI.Models.CinemaViewModel
@{
    ViewBag.Title = "Manage";
}
<!-- Import facebook login script -->
<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else {
      // The person is not logged into your app or we are unable to tell.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '270127940065885',
    cookie     : true,  // enable cookies to allow the server to access
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.8' // use graph api version 2.8
  });

  // Now that we've initialized the JavaScript SDK, we call
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));


  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', {fields: 'name,email,id'}, function(response) {
        console.log('Successful login for: ' + response.name);
        document.getElementById('title').innerHTML = 'Beheer uw gegevens, ' + response.name;
        document.getElementById('textbox').value = response.email;
      //document.getElementById('status').innerHTML =
      //  'Thanks for logging in, ' + response.name + '! ' + response.email + ' ' + response.id;
    });
  }


    FB.Event.subscribe('auth.login', function () {
        window.location = "http://localhost:26192/SubscriptionHolder/Manage";
    });

    FB.Event.subscribe("auth.logout", function () { window.location = '@Url.Action("FilmOverview", "FilmOverview")' });
</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

@Html.Partial("~/Views/Shared/_Menubar.cshtml")
<div class="container-fluid" style="background-color: #ffffff; border-bottom: 1px solid #e6e6e6">
    <div class="row">
        <div class="col-md-12">
            <div class="text-center">
                <h2 style="color: #777777" id="title">Beheer uw persoonsgegevens</h2>
                <br />
            </div>
        </div>
    </div>
</div>

<br />
<br />

<!-- This was used to test the retrieved user information -->
@*<div id="status" style="background-color: yellow;">
    <p></p>
</div>*@

<form method="post" action="@Url.Action("GetInfo", "SubscriptionHolder")">
    <div class="container-fluid text-center" style="text-align: center;">
        <h4>Is onderstaand uw facebook-email?</h4>
        <input id="textbox" type="text" readonly="readonly" name="email"/>
        <button type="submit" class="btn btn-success">Bevestigen</button>
    </div>
</form>







@*<div class="text-center">
    <fb:login-button scope="public_profile,email" size="large" data-auto-logout-link="true" onlogout="top.location = '@Url.Action("FilmOverview", "FilmOverview")'">
    </fb:login-button>
</div>*@

